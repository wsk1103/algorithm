/**
 * @author sk
 * @time 2022/9/8
 * @desc say
 **/
public class L667 {

    /*
     * //给你两个整数 n 和 k ，请你构造一个答案列表 answer ，该列表应当包含从 1 到 n 的 n 个不同正整数，并同时满足下述条件：
     * //
     * //
     * // 假设该列表是 answer = [a1, a2, a3, ... , an] ，那么列表 [|a1 - a2|, |a2 - a3|, |a3 - a4|
     * //, ... , |an-1 - an|] 中应该有且仅有 k 个不同整数。
     * //
     * //
     * // 返回列表 answer 。如果存在多种答案，只需返回其中 任意一种 。
     * //
     * //
     * //
     * // 示例 1：
     * //
     * //
     * //输入：n = 3, k = 1
     * //输出：[1, 2, 3]
     * //解释：[1, 2, 3] 包含 3 个范围在 1-3 的不同整数，并且 [1, 1] 中有且仅有 1 个不同整数：1
     * //
     * //
     * // 示例 2：
     * //
     * //
     * //输入：n = 3, k = 2
     * //输出：[1, 3, 2]
     * //解释：[1, 3, 2] 包含 3 个范围在 1-3 的不同整数，并且 [2, 1] 中有且仅有 2 个不同整数：1 和 2
     * //
     * //
     * //
     * //
     * // 提示：
     * //
     * //
     * // 1 <= k < n <= 10⁴
     * //
     * //
     * //
     * //
     * // Related Topics 数组 数学 👍 146 👎 0
     */

    /**
     * 这道题目属于构造的问题，思路很难想。我们可以先观察这两种构造方式，分别为：
     * <p>
     * 1，2，3，...n，相邻两个数的绝对值只有一种
     * 1，n，2，n - 2，3，n - 3，4....相邻两个数的绝对值总共有n种
     * 所以我们可以结合这两种构造方式构造成k个不同的绝对值对应的序列，首先我们可以使用第一种方式构造成前n - k - 1个数字，
     * 接下来的k - 1个数字使用第二种方式构造即可，可以得到：
     * <p>
     * 1，2，3，4...n - k - 1，n - k, n，n - k + 1，n - 1....
     * <p>
     * 前面n - k - 1个数字绝对值只有一种，后面的k - 1个数字绝对值有k种，所以总共有k种绝对值。
     *
     * @param n
     * @param k
     * @return
     */
    /**
     * 执行耗时:0 ms,击败了100.00% 的Java用户
     * 内存消耗:41.9 MB,击败了33.70% 的Java用户
     *
     * @param n
     * @param k
     * @return
     */
    public static int[] handle(int n, int k) {
        int[] ans = new int[n];
        int l = 1, h = n;
        for (int i = 0; i < k; i++) {
            ans[i] = i % 2 == 0 ? l++ : h--;
        }
        for (int i = k; i < n; i++) {
            ans[i] = k % 2 == 0 ? h-- : l++;
        }
        return ans;
    }


}
